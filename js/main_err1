function find_arr_id(arr,find_id) {
	var ret = -1;
	for (var i = 0; i < arr.length; i++) if (arr[i].id == find_id) {ret = i; break;}
	return ret;
}

function get_counter(cmd_arr, data = 1,actions = 1,couner_value = 0,base_link = '')  
{
	var url = 'models/json/get_counter.php';
	$('#counter').prop('disabled', true);
	$('#counter').html('<option>загрузка...</option>');
	
	$.getJSON(url,{data: data})
	.done(function (result) {
		if (result.type == 'error') {
			alert('error');
			return(false);
		} else {
			var options = '';
			$(result.data).each(function() {
				options += '<option value="' + $(this).attr('id') + '">' + $(this).attr('name') + '</option>';
			});
			$('#counter').html(options);
			$('#counter').prop('disabled', false);
			if (actions == 2) $('#counter [value="' + couner_value + '"]').prop("selected", true);
		}
	})
	.fail(function(){alert('error');});
}	

function get_counter_edit(cmd_arr, data = 1,actions = 1,couner_value = 0,base_link = '')  
{
	var url = 'models/json/get_counter.php';
	$('#counter_edit').prop('disabled', true);
	$('#counter_edit').html('<option>загрузка...</option>');
	
	$.getJSON(url,{data: data})
	.done(function (result) {
		if (result.type == 'error') {
			alert('error');
			return(false);
		}
		else {
			var options = '';
			$(result.data).each(function() {
				options += '<option value="' + $(this).attr('id') + '">' + $(this).attr('name') + '</option>';
			});
			$('#counter_edit').html(options);
			$('#counter_edit').prop('disabled', false);
			if (actions == 2) $('#counter_edit [value="' + couner_value + '"]').prop("selected", true);
		}
	})
	.fail(function(){alert('error');});
}	


function get_counter_filtred(cmd_arr, data = 1,actions = 1,couner_value = 0,base_link = '')  
{
	var url = 'models/json/get_counter_filtred.php';
	var  lot = $('#lot').val();
	
	$('#counter').prop('disabled', true);
	$('#counter').html('<option>загрузка...</option>');
	
	$.getJSON(url,{data: data})
	.done(function (result) {
		if (result.type == 'error') {
			alert('error');
			return(false);
		}
		else {
			var options = '';
			$(result.data).each(function() {
				options += '<option value="' + $(this).attr('id') + '">' + $(this).attr('name') + '</option>';
			});
			$('#counter').html(options);
			$('#counter').prop('disabled',false);
			if (actions == 2) $('#counter [value="' + couner_value + '"]').prop("selected", true);
			if (actions == 3) {
				cmd_arr.id_lot = lot;
				cmd_arr.id_sub = data;
				cmd_arr.id_counter = $('#counter').val();
				json_get_table(cmd_arr);
				history.pushState(null, null, create_cmd(base_link,cmd_arr));
			}
		}
	})
	.fail(function(){alert('error');});
}	

function get_substation(cmd_arr, data = 1, actions = 1, value = 0, value_counter = 0, base_link = '')  
{
	var url = 'models/json/get_substation.php';
	$('#substation').prop('disabled', true);
	$('#substation').html('<option>загрузка...</option>');

	$.getJSON(url,{data: data})
	.done(function(result) { 
		if (result.type == 'error') {
			alert('error');
			return(false);
		}
		else {
			var options = '';
			$(result.data).each(function() {
				options += '<option value="' + $(this).attr('id') + '">' + $(this).attr('name') + '</option>';
			});
			$('#substation').html(options);
			$('#substation').prop('disabled', false);
			if (actions == 1) get_counter(cmd_arr, $('#substation').val());
			if (actions == 2) {
				$('#substation [value="' + value + '"]').prop("selected", true);
				get_counter(cmd_arr, value, 2, value_counter);
			}
		}
	})
	.fail(function() { alert("error");});
}

function get_substation_edit(cmd_arr, data = 1, actions = 1, value = 0, value_counter = 0, base_link = '')  
{
	var url = 'models/json/get_substation.php';
	$('#substation_edit').prop('disabled', true);
	$('#substation_edit').html('<option>загрузка...</option>');

	$.getJSON(url,{data: data})
	.done(function (result) {
		if (result.type == 'error') {
			alert('error');
			return(false);
		}
		else {
			var options = '';
			$(result.data).each(function() {
				options += '<option value="' + $(this).attr('id') + '">' + $(this).attr('name') + '</option>';
			});
			$('#substation_edit').html(options);
			$('#substation_edit').prop('disabled', false);
			if (actions == 1) get_counter_edit(cmd_arr, $('#substation_edit').val());
			if (actions == 2) {
				$('#substation_edit [value="' + value + '"]').prop("selected", true);
				get_counter_edit(cmd_arr, value, 2, value_counter);
			}
		}
	})
	.fail(function(){alert('error');});
}

function get_substation_filtred(cmd_arr, data = 1, actions = 1, value = 0, value_counter = 0, base_link = '')  
{
	var url = 'models/json/get_substation_filtred.php';
	$('#substation').prop('disabled', true);
	$('#substation').html('<option>загрузка...</option>');

	$.getJSON(url,{data: data})
	.done(function (result) {
		if (result.type == 'error') {
			alert('error');
			return(false);
		}
		else {
			var options = '';
			$(result.data).each(function() {
				options += '<option value="' + $(this).attr('id') + '">' + $(this).attr('name') + '</option>';
			});
			$('#substation').html(options);
			$('#substation').prop('disabled',false);
			if (actions == 1) get_counter_filtred(cmd_arr, $('#substation').val());
			if (actions == 2) {
				$('#substation [value="' + value + '"]').prop("selected", true);
				get_counter_filtred(cmd_arr, value, 2, value_counter);
			}
			if (actions == 3) {
				cmd_arr.id_lot = data;
				cmd_arr.id_sub = $('#substation').val();
				json_get_table(cmd_arr);
				history.pushState(null, null, create_cmd(base_link, cmd_arr));
			}
			if (actions == 4) {
				get_counter_filtred(cmd_arr, $('#substation').val(), 3, 0, base_link);
			}
			if (actions == 5) {
				$('#substation [value="' + value + '"]').prop("selected", true);
			}
		}
	})
	.fail(function(){alert('error');});
}

function create_cmd(base_link,params)  
{
	var cmd = '';
	var count = 0;
	cmd = base_link;
	for (let key in params) {
		if (count == 0 ) cmd += '?'; else cmd += '&';
		cmd += key + '=' + params[key];
		count++;
	}
	return cmd;
}
	
function print_table(counter)  
{
	var st = '';
	var count = 0;
	var class_e = '';
	for (let key in counter) {
		if (count % 2 != 0) { class_e = 'counter_str_odd';} else class_e = 'counter_str_even';			
		// console.log(key);
		// console.log(counter[key]);
		st += '<div id="id_' + counter[key].id + '" class="'  + class_e + '"  title="Редактировать параметры">';
		st += '<div class="col_lots">' + counter[key].lot + '</div>';
		st += '<div class="col_substation">' + counter[key].substation + '</div>';
		st += '<div class="col_counts">' + counter[key].counter + '</div>';
		st += '<div class="col_date">' + counter[key].date1 +  '</div> ';
		st += '<div class="col_value">' + counter[key].value +  '</div> ';
		st += '</div>'; 
		count++;
		
	}
	return st;
}

function json_get_table(cmd_arr, base_link = '')  
{
	$.ajax({
		dataType: 'json',
		type: 'get',
		url: 'models/json/filter_value.php',
		data: cmd_arr,
		success: function(result){
			if (result.success == false) {
				alert(result.error);
				return(false);
			}
			else {
				var data = result.data;
				 //console.log(base_link);
				$('#right').html(print_table(data));
				$('#right').append(result.navigator);
				//if (result.st != 0) cmd_arr.st = result.st; else delete cmd_arr.st;
				history.pushState(null, null, create_cmd(base_link,cmd_arr));
			}	
		}	
	});
}


function print_table_user(user_all)  
{
	var st = '';
	var count = 0;
	var class_e = '';
	st += '<div class="title_table_user">';
	st += '<div class="title_user">Пользователь</div>';
	st += '<div class="title_family">Фамилия</div>';
	st += '<div class="title_name">Имя</div>';
	st += '</div>'; 
	
	for (let key in user_all) {
		if (count % 2 != 0) { class_e = 'counter_str_odd';} else class_e = 'counter_str_even';			
		st += '<div id="id_' + user_all[key].id + '" class="'  + class_e + '"  title="Редактировать параметры пользователя">';
		st += '<div class="col_user">' + user_all[key].users + '</div>';
		st += '<div class="col_family">' + user_all[key].family + '</div>';
		st += '<div class="col_name">' + user_all[key].name + '</div>';
		st += '</div>'; 
		count++;
		
	}
	return st;
}

function json_get_user()  
{
	$.ajax({
		dataType: 'json',
		type: 'get',
		url: 'models/json/get_user.php',
		success: function(result){
			if (result.success == false) {
				alert(result.error);
				return(false);
			}
			else {
				var data = result.data;
				console.log(result.st);
				$('#right').html(print_table_user(data));
				$('#right').prepend(add_user_btn());

			}	
		}	
	});
}


function l_form_edit_value(cmd_arr, param)
{
	$.ajax({
		dataType: 'json',
		type: 'get',
		url: 'models/json/edit_form_value.php',
		data: param,
		success: function(result){
			if (result.success == false) {
				alert(result.error);
				return(false);
			}
			else {
				var data = result.data;
				$('#lot_edit [value="' + data.lot_id + '"]').prop("selected", true);		
				get_substation_edit(cmd_arr, data.lot_id, 2, data.sub_id, data.counter_id);
				$('#date_airing_begin_edit').val(data.date1);		
				$('#time_airing_begin_edit').val(data.time1);	
				$('#counter_val_edit').val(data.value);	
				$('#edit_id1').val(data.id);	
			}	
		}	
	});
	
}

function l_form_edit_user(param)
{
	$.ajax({
		dataType: 'json',
		type: 'get',
		url: 'models/json/edit_form_user.php',
		data: param,
		success: function(result){
			if (result.success == false) {
				alert(result.error);
				return(false);
			}
			else {
				var data = result.data;
				console.log(data);
				$('#user_edit').val(data.users);	
				$('#pass_edit').val('');
				$('#pass_repeat_edit').val('');	
				$('#family_edit').val(data.family);	
				$('#name_edit').val(data.name);	
				$('#edit_user_id').val(data.id);	
			}	
		}	
	});
	
}

function edit_form_actions(obj_form)
{
	var form = obj_form.view.form;
	var m_method = $(form).attr('method'); //берем из формы метод передачи данных
	var m_action = $(form).attr('action'); //получаем адрес скрипта на сервере, куда нужно отправить форму
	var m_data = $(form).serialize(); //получаем данные, введенные пользователем в формате input1=value1&input2=value2..., только input=text
	var  lot = $('#lot_edit').val();
	var  counts = $('#counter_edit').val();
	var substation = $('#substation_edit').val();
	m_data += '&lot=' + lot + '&counter=' + counts + '&substation=' + substation; // Добавляем выбранные select ы Участок подстанция и счётчик
	//Устанавливаем действие  для формы
	m_data += '&actions=edit';   

	$.ajax({
		dataType: 'json',
		type: m_method,
		url: m_action,
		data: m_data,
	success: function(result){
		if (result.success == false) {
			alert(result.error);
			return(false);
		} else {
			var data = result.data;
			// console.log(edit_arr);
			edit_form.dialog( "close" );
			json_get_table(cmd_arr);
		}
	}	
	})	
}
function add_user_form_actions(obj_form)
{
	console.log(obj_form);
	var form = obj_form.view.form;
	
	var m_method = $(form).attr('method'); //берем из формы метод передачи данных
	var m_action = $(form).attr('action'); //получаем адрес скрипта на сервере, куда нужно отправить форму
	var m_data = $(form).serialize(); //получаем данные, введенные пользователем в формате input1=value1&input2=value2..., только input=text
	//Устанавливаем действие  для формы
	m_data += '&actions=add';   

	$.ajax({
		dataType: 'json',
		type: m_method,
		url: m_action,
		data: m_data,
	success: function(result){
		if (result.success == false) {
			alert(result.error);
			return(false);
		} else {
			var data = result;
			// console.log(edit_arr);
			alert(data.message);
			user_form_add.dialog( "close" );
			json_get_user();
		}
	}	
	})	
}

function edit_user_form_actions(obj_form)
{
	console.log(obj_form);
	var form = obj_form.view.form_edit;
	var m_method = $(form).attr('method'); //берем из формы метод передачи данных
	var m_action = $(form).attr('action'); //получаем адрес скрипта на сервере, куда нужно отправить форму
	var m_data = $(form).serialize(); //получаем данные, введенные пользователем в формате input1=value1&input2=value2..., только input=text
	//Устанавливаем действие  для формы
	m_data += '&actions=edit';   

	$.ajax({
		dataType: 'json',
		type: m_method,
		url: m_action,
		data: m_data,
	success: function(result){
		if (result.success == false) {
			alert(result.error);
			return(false);
		} else {
			var data = result;
			// console.log(edit_arr);
			alert(data.message);
			user_form_edit.dialog( "close" );
			json_get_user();
		}
	}	
	})	
}


function unregistration()
{
	$.ajax({
		dataType: 'json',
		type: 'post',
		url: 'models/json/unregistration.php',
	success: function(result){
				
			$.ajax({
				dataType: 'json',
				type: 'post',
				url: 'models/json/menu.json',
			success: function(result_menu){
					var menu_v =  result_menu;
					var mainfile = '<ul>';
					for(var i=0;i<menu_v.menu.length;i++)
					{
						mainfile += '<li>';
						mainfile += '<a id="' + menu_v.menu[i].id_a + '" href="' + menu_v.menu[i].url + '">' + menu_v.menu[i].name + '</a>';
						mainfile += '</li>';
					}
					mainfile += '</ul>';	
					$('#menu').html( mainfile );
					$('#left').html( '' );
					$('#right').html( '' );
			}
			})
	}
	})
	
}

function registration(form)
{
	var m_method=$(form).attr('method'); //берем из формы метод передачи данных
	var m_action=$(form).attr('action'); //получаем адрес скрипта на сервере, куда нужно отправить форму
	var m_data=$(form).serialize(); //получаем данные, введенные пользователем в формате input1=value1&input2=value2...,
	$.ajax({
		dataType: 'json',
		type: m_method,
		url: m_action,
		data: m_data,
	success: function(result){
		console.log(result.success);
		if (result.success == false) {
			// console.log(result.error);
			alert(result.error);
			return(false);
		}
		else {
			$.ajax({
				dataType: 'json',
				type: 'post',
				url: 'models/json/menu_registration.json',
			success: function(result_menu){
						var menu_v =  result_menu;
						var mainfile = '<ul>';
						for(var i=0;i<menu_v.menu.length;i++)
						{
							mainfile += '<li>';
							mainfile += '<a id="' + menu_v.menu[i].id_a + '" href="' + menu_v.menu[i].url + '">' + menu_v.menu[i].name + '</a>';
							mainfile += '</li>';
						}
							if (result.id != 0) mainfile += '<div class="user"><div class="title_user">Вы зашли как:</div>' + result.name + ' ' + result.family +  '</div>';
						mainfile += '</ul>';	
						$('#menu').html( mainfile );
			}
			})
			$.ajax({
				dataType: 'json',
				type: 'post',
				url: 'models/json/menu_left.php',
			success: function(result_menu){
						var menu_v =  result_menu;
						console.log(menu_v);
						console.log(menu_v.length);
						
						var mainfile = '<div id="menu_left" class="left-box"><ol>';
						for(var i=0;i<menu_v.length;i++)
						{
							console.log(menu_v[i].id_a);
							mainfile += '<li class="menu_childs1'  + '">';  //
							mainfile += '<a id="' + menu_v[i].id_a + '" href="' + menu_v[i].url + '">' + menu_v[i].name + '</a>';
							mainfile += '</li>';
						}
						mainfile += '</ol></div>';	
						$('#left').html( mainfile );
			}
			})
		}	
	}
	})
	login_form.dialog( "close" );			
}

function add_user_btn()
{
	var st = '<div id="add_user_btn">';
	st += '<div class="btn-ico"><img src="img/web/add_user.png" width="32" height="32" alt="add_user"></div>';
	st += '<div class="btn-text">Добавить пользователя</div>';
	st += '</div>';
	return st;
	
}

function edit_privilege()
{
			var m_data = {'id_user': $('#edit_user_id').val()}		
			$.ajax({
				dataType: 'json',
				type: 'post',
				data: m_data,
				url: 'models/json/menu_left_priv.php',
			success: function(result_menu){
						var menu_v =  result_menu;
						console.log(menu_v);
						console.log(menu_v.length);
						
						var mainfile = '<ol>';
						for(var i=0;i<menu_v.length;i++)
						{
							mainfile += '<li>' + menu_v[i].name;
							mainfile += '<input id="check_' + menu_v[i].id_a + '" class="privilege_checkbox" type="checkbox" ' + menu_v[i].checked +  ' />';
							mainfile += '</li>';
							// checked="checked"
										
						}
						mainfile += '</ol>';	
						$('#user_form_privelege').html( mainfile );
			}
			})
	user_form_edit.dialog( "close" );
	user_form_privilege.dialog( "open" );
	
}

function privilege_user_form_actions(obj_form)
{
	var sList = '';
	var form = obj_form.view.form_privilege;
	var m_method = $(form).attr('method'); //берем из формы метод передачи данных
	var m_action = $(form).attr('action'); //получаем адрес скрипта на сервере, куда нужно отправить форму
	
	var m_checkbox = form.find('input[type=checkbox]');	// запомнить !!!
	$(m_checkbox).each(function () {
		var sThisVal = (this.checked ? "1" : "0");
		sList += (sList=="" ? sThisVal : "," + sThisVal);
	});
	var m_data = {data: sList,
					'id_user': $('#edit_user_id').val() 
				};
	console.log (m_data);

	$.ajax({
			dataType: 'json',
			type: m_method,
			url: m_action,
			data: m_data,
		success: function(result){
			if (result.success == false) {
				alert(result.error);
				return(false);
			} else {
				var data = result;
			}
		}	
	})

	user_form_privilege.dialog( "close" );
}


